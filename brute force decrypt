def brute_force_decrypt(encrypted_word):

    potential_solutions = []

    for shift in range(1, 26):  # Generate 25 possible shifts

        decrypted_word = ''



        for char in encrypted_word:

            if char.isalpha():  # Check if the character is a letter

                # Shift character and wrap around the alphabet

                shifted_char = chr((ord(char) - ord('a') + shift) % 26 + ord('a')) if char.islower() else chr((ord(char) - ord('A') + shift) % 26 + ord('A'))

                decrypted_word += shifted_char



        print(f"Possible unencrypted version: {decrypted_word}")

        user_input = input("Is this a possible real word? (y/n): ").strip().lower()



        if user_input == 'y':

            potential_solutions.append(decrypted_word)



    print("Potential solutions:")

    for solution in potential_solutions:

        print(solution)

# Example usage

encrypted_word = input("Enter the encrypted word: ")

brute_force_decrypt(encrypted_word)
